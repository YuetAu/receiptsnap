rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow read/write access for authenticated users to their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    match /expenses/{expenseId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.userId || request.auth.uid in get(/databases/$(database)/documents/companies/$(resource.data.company)).data.members);
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    match /companies/{companyId} {
      // Allow read if authenticated and the user is a member of the company
      allow read: if request.auth != null && (request.auth.uid == resource.data.ownerId || request.auth.uid in resource.data.members);
      // Allow create if authenticated
      allow create: if request.auth != null;
      // Allow update/delete only by the owner
      allow update, delete: if request.auth != null && resource.data.ownerId == request.auth.uid;
    }
    match /invitations/{invitationId} {
      // Allow read if authenticated and either the inviter or the invitee
      allow read: if request.auth != null && (resource.data.inviterId == request.auth.uid || resource.data.inviteeEmail == request.auth.token.email);
      // Allow create if authenticated and the inviter matches
      allow create: if request.auth != null && request.resource.data.inviterId == request.auth.uid;
      // Allow update only to change status to 'accepted' by the invitee
      allow update: if request.auth != null && resource.data.inviteeEmail == request.auth.token.email && request.resource.data.status == 'accepted';
      // Allow delete only by the inviter
      allow delete: if request.auth != null && resource.data.inviterId == request.auth.uid;
    }
  }
}